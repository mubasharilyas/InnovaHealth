{"ast":null,"code":"import _asyncToGenerator from \"D:/InnovaHealth/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/authentication.service\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(route, router, authenticationService) {\n    this.route = route;\n    this.router = router;\n    this.authenticationService = authenticationService;\n    this.loading = false;\n  }\n\n  ngOnInit() {\n    this.loginForm = new FormGroup({\n      email: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  Login() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      // stop here if form is invalid\n      if (_this.loginForm.invalid) {\n        return;\n      }\n\n      _this.loading = true;\n      let data = yield lastValueFrom(_this.authenticationService.login(_this.loginForm.controls['email'].value, _this.loginForm.controls['password'].value));\n      console.log(\"data\", data);\n\n      if (data) {\n        if (data.message === 'Auth Successful') {\n          _this.router.navigate([\"/dashboard\"]);\n        }\n\n        _this.loading = false;\n      } else {\n        _this.loading = false;\n      }\n    })();\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthenticationService));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 27,\n  vars: 2,\n  consts: [[1, \"vh-100\", \"gradient-custom\"], [1, \"container\", \"py-5\", \"h-100\"], [1, \"row\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"h-100\"], [1, \"col-12\", \"col-md-8\", \"col-lg-6\", \"col-xl-5\"], [1, \"card\", \"bg-dark\", \"text-white\", 2, \"border-radius\", \"1rem\"], [1, \"card-body\", \"px-5\", \"text-center\"], [1, \"mb-md-5\", \"mt-md-4\", \"pb-2\"], [3, \"formGroup\"], [1, \"fw-bold\", \"mb-2\", \"text-uppercase\"], [1, \"text-white-50\", \"mb-5\"], [1, \"form-outline\", \"form-white\", \"mb-4\"], [\"for\", \"typeEmailX\", 1, \"form-label\"], [\"type\", \"email\", \"placeholder\", \"Enter Your Email\", \"formControlName\", \"email\", \"id\", \"typeEmailX\", 1, \"form-control\", \"form-control-lg\"], [\"for\", \"typePasswordX\", 1, \"form-label\"], [\"type\", \"password\", \"placeholder\", \"Enter Your password\", \"formControlName\", \"password\", \"id\", \"typePasswordX\", 1, \"form-control\", \"form-control-lg\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-light\", \"btn-lg\", \"px-5\", 3, \"disabled\", \"click\"], [1, \"\"], [\"routerLink\", \"/register\", 1, \"text-white-50\", \"fw-bold\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"form\", 7)(8, \"h2\", 8);\n      i0.ɵɵtext(9, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"p\", 9);\n      i0.ɵɵtext(11, \"Please enter your login and password!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 10)(13, \"label\", 11);\n      i0.ɵɵtext(14, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 10)(17, \"label\", 13);\n      i0.ɵɵtext(18, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 14);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"button\", 15);\n      i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_20_listener() {\n        return ctx.Login();\n      });\n      i0.ɵɵtext(21, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(22, \"div\")(23, \"p\", 16);\n      i0.ɵɵtext(24, \"Don't have an account? \");\n      i0.ɵɵelementStart(25, \"a\", 17);\n      i0.ɵɵtext(26, \"Sign Up\");\n      i0.ɵɵelementEnd()()()()()()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n    }\n  },\n  dependencies: [i1.RouterLinkWithHref, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".gradient-custom[_ngcontent-%COMP%] {\\n  \\n  background: #6a11cb;\\n  \\n  \\n  background: linear-gradient(to right, rgb(106, 17, 203), rgb(37, 117, 252));\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksOEJBQUE7RUFDQSxtQkFBQTtFQUVBLCtCQUFBO0VBR0EscUVBQUE7RUFDQSwyRUFBQTtBQURKIiwiZmlsZSI6ImxvZ2luLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmdyYWRpZW50LWN1c3RvbSB7XHJcbiAgICAvKiBmYWxsYmFjayBmb3Igb2xkIGJyb3dzZXJzICovXHJcbiAgICBiYWNrZ3JvdW5kOiAjNmExMWNiO1xyXG4gICAgXHJcbiAgICAvKiBDaHJvbWUgMTAtMjUsIFNhZmFyaSA1LjEtNiAqL1xyXG4gICAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG8gcmlnaHQsIHJnYmEoMTA2LCAxNywgMjAzLCAxKSwgcmdiYSgzNywgMTE3LCAyNTIsIDEpKTtcclxuICAgIFxyXG4gICAgLyogVzNDLCBJRSAxMCsvIEVkZ2UsIEZpcmVmb3ggMTYrLCBDaHJvbWUgMjYrLCBPcGVyYSAxMissIFNhZmFyaSA3KyAqL1xyXG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KHRvIHJpZ2h0LCByZ2JhKDEwNiwgMTcsIDIwMywgMSksIHJnYmEoMzcsIDExNywgMjUyLCAxKSlcclxuICAgIH0iXX0= */\"]\n});","map":{"version":3,"mappings":";AACA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,UAAjC,QAAmD,gBAAnD;AAEA,SAAgBC,aAAhB,QAAqC,MAArC;;;;;AAQA,OAAM,MAAOC,cAAP,CAAqB;EAKzBC,YACUC,KADV,EAEUC,MAFV,EAGUC,qBAHV,EAGsD;IAF5C;IACA;IACA;IALV,eAAgB,KAAhB;EAMK;;EAELC,QAAQ;IAEN,KAAKC,SAAL,GAAiB,IAAIT,SAAJ,CAAc;MAC7BU,KAAK,EAAE,IAAIX,WAAJ,CAAgB,EAAhB,EAAmB,CAACE,UAAU,CAACU,QAAZ,CAAnB,CADsB;MAE7BC,QAAQ,EAAE,IAAIb,WAAJ,CAAgB,EAAhB,EAAmB,CAACE,UAAU,CAACU,QAAZ,CAAnB;IAFmB,CAAd,CAAjB;EAKD;;EAEKE,KAAK;IAAA;;IAAA;MACT;MACA,IAAI,KAAI,CAACJ,SAAL,CAAeK,OAAnB,EAA4B;QAC1B;MACD;;MACD,KAAI,CAACC,OAAL,GAAe,IAAf;MACD,IAAIC,IAAI,SAASd,aAAa,CAAC,KAAI,CAACK,qBAAL,CAA2BU,KAA3B,CAAiC,KAAI,CAACR,SAAL,CAAeS,QAAf,CAAwB,OAAxB,EAAiCC,KAAlE,EAAyE,KAAI,CAACV,SAAL,CAAeS,QAAf,CAAwB,UAAxB,EAAoCC,KAA7G,CAAD,CAA9B;MACIC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBL,IAAnB;;MACJ,IAAGA,IAAH,EAAS;QACA,IAAIA,IAAI,CAACM,OAAL,KAAe,iBAAnB,EAAsC;UACtC,KAAI,CAAChB,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,YAAD,CAArB;QACD;;QACD,KAAI,CAACR,OAAL,GAAe,KAAf;MACD,CALN,MAMU;QACH,KAAI,CAACA,OAAL,GAAe,KAAf;MACD;IAhBI;EAkBV;;AAtCwB;;;mBAAdZ,gBAAcqB;AAAA;;;QAAdrB;EAAcsB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX3BL,mCAAwC,CAAxC,EAAwC,KAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,KAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,KAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,KAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,KAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,KAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,MAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,IAAxC,EAAwC,CAAxC;MASwDA;MAAKA;MAC7CA;MAA8BA;MAAqCA;MAEnEA,iCAA0C,EAA1C,EAA0C,OAA1C,EAA0C,EAA1C;MAC6CA;MAAKA;MAChDA;MACFA;MAEAA,iCAA0C,EAA1C,EAA0C,OAA1C,EAA0C,EAA1C;MACgDA;MAAQA;MACtDA;MACFA;MAIAA;MAA+FA;QAAA,OAASM,WAAT;MAAgB,CAAhB;MAAkBN;MAAKA;MAUxHA,6BAAK,EAAL,EAAK,GAAL,EAAK,EAAL;MACcA;MAAuBA;MAAwDA;MAAOA;;;;MA3B5FA;MAAAA;MAgB0DA;MAAAA","names":["FormControl","FormGroup","Validators","lastValueFrom","LoginComponent","constructor","route","router","authenticationService","ngOnInit","loginForm","email","required","password","Login","invalid","loading","data","login","controls","value","console","log","message","navigate","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["D:\\InnovaHealth\\src\\app\\pages\\login\\login.component.ts","D:\\InnovaHealth\\src\\app\\pages\\login\\login.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { first, lastValueFrom } from 'rxjs';\r\nimport { AuthenticationService } from 'src/app/service/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm!: FormGroup;\r\n  loading:boolean=false\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.loginForm = new FormGroup({\r\n      email: new FormControl('',[Validators.required]),\r\n      password: new FormControl('',[Validators.required])\r\n      \r\n    });\r\n  }\r\n\r\n  async Login() {\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    }\r\n    this.loading = true;\r\n   let data = await lastValueFrom(this.authenticationService.login(this.loginForm.controls['email'].value, this.loginForm.controls['password'].value))\r\n       console.log(\"data\",data)\r\n   if(data) {\r\n            if (data.message==='Auth Successful') {\r\n            this.router.navigate([\"/dashboard\"]);\r\n          }\r\n          this.loading = false;\r\n        }\r\n        else {\r\n          this.loading = false;\r\n        }\r\n      \r\n  }\r\n\r\n}\r\n","<section class=\"vh-100 gradient-custom\">\r\n    <div class=\"container py-5 h-100\">\r\n      <div class=\"row d-flex justify-content-center align-items-center h-100\">\r\n        <div class=\"col-12 col-md-8 col-lg-6 col-xl-5\">\r\n          <div class=\"card bg-dark text-white\" style=\"border-radius: 1rem;\">\r\n            <div  class=\"card-body px-5 text-center\">\r\n             \r\n              <div  class=\"mb-md-5 mt-md-4 pb-2\">\r\n                <form [formGroup]=\"loginForm\">\r\n                <h2 class=\"fw-bold mb-2 text-uppercase\">Login</h2>\r\n                <p class=\"text-white-50 mb-5\">Please enter your login and password!</p>\r\n  \r\n                <div class=\"form-outline form-white mb-4\">\r\n                  <label class=\"form-label\" for=\"typeEmailX\">Email</label>\r\n                  <input type=\"email\" placeholder=\"Enter Your Email\" formControlName=\"email\" id=\"typeEmailX\" class=\"form-control form-control-lg\" />\r\n                </div>\r\n  \r\n                <div class=\"form-outline form-white mb-4\">\r\n                  <label class=\"form-label\" for=\"typePasswordX\">Password</label>\r\n                  <input type=\"password\" placeholder=\"Enter Your password\" formControlName=\"password\" id=\"typePasswordX\" class=\"form-control form-control-lg\" />\r\n                </div>\r\n  \r\n                <!-- <p class=\"small mb-5 pb-lg-2\"><a class=\"text-white-50\" href=\"#!\">Forgot password?</a></p> -->\r\n  \r\n                <button class=\"btn btn-outline-light btn-lg px-5\" type=\"submit\" [disabled]=\"loginForm.invalid\" (click)=\"Login()\">Login</button>\r\n  \r\n                <!-- <div class=\"d-flex justify-content-center text-center mt-4 pt-1\">\r\n                  <a href=\"#!\" class=\"text-white\"><i class=\"fab fa-facebook-f fa-lg\"></i></a>\r\n                  <a href=\"#!\" class=\"text-white\"><i class=\"fab fa-twitter fa-lg mx-4 px-2\"></i></a>\r\n                  <a href=\"#!\" class=\"text-white\"><i class=\"fab fa-google fa-lg\"></i></a>\r\n                </div> -->\r\n            </form>\r\n              </div>\r\n  \r\n              <div>\r\n                <p class=\"\">Don't have an account? <a routerLink=\"/register\" class=\"text-white-50 fw-bold\">Sign Up</a>\r\n                </p>\r\n              </div>\r\n  \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n"]},"metadata":{},"sourceType":"module"}
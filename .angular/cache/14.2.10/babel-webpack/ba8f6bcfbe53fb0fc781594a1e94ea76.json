{"ast":null,"code":"import _asyncToGenerator from \"D:/MyProject/task-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n  }\n\n  register(user) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let response = yield lastValueFrom(_this.http.post(`${environment.API_URL}/users/register`, user));\n      return response;\n    })();\n  }\n\n}\n\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAASA,aAAT,QAA8B,MAA9B;AACA,SAASC,WAAT,QAA4B,8BAA5B;;;AAMA,OAAM,MAAOC,UAAP,CAAiB;EAErBC,YAAoBC,IAApB,EAAmC;IAAf;EAAoB;;EAElCC,QAAQ,CAACC,IAAD,EAAW;IAAA;;IAAA;MACvB,IAAIC,QAAQ,SAAOP,aAAa,CAAC,KAAI,CAACI,IAAL,CAAUI,IAAV,CAAoB,GAAGP,WAAW,CAACQ,OAAO,iBAA1C,EAA6DH,IAA7D,CAAD,CAAhC;MACA,OAAOC,QAAP;IAFuB;EAG1B;;AAPsB;;;mBAAVL,YAAUQ;AAAA;;;SAAVR;EAAUS,SAAVT,UAAU;EAAAU,YAFT","names":["lastValueFrom","environment","ApiService","constructor","http","register","user","response","post","API_URL","i0","factory","providedIn"],"sourceRoot":"","sources":["D:\\MyProject\\task-project\\src\\app\\service\\api.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { lastValueFrom } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http:HttpClient) { }\n\n  async register(user: User) {\n    let response=await lastValueFrom(this.http.post<any>(`${environment.API_URL}/users/register`, user));\n    return response\n}\n}\n"]},"metadata":{},"sourceType":"module"}